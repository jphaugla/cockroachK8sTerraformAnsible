# Local .terraform directories
**/.terraform/*
**/ansible_env/*

# .tfstate files
*.tfstate
*.tfstate.*
*/.terraform.lock.hcl
**/.terraform.lock.hcl
multiregionGKE/test/.terraform.lock.hcl
terraform-multi-eks

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
 
# ignore sensitive directories
*/my-safe-directory/
*/certs/
*/penv-ansible/
*/gke_gcloud_auth_plugin_cache/
*/gkeconfig/
ansible/cockroach/tasks/.create-crdb.yml.swp
ansible/gke_gcloud_auth_plugin_cache
ansible/gkeconfig
ansible/my-safe-directory/
ansible/ansible-venv/
ansible-multiregion/cockroach/tasks/.create-crdb.yml.swp
ansible-multiregion/gke_gcloud_auth_plugin_cache
ansible-multiregion/gkeconfig
ansible-multiregion/my-safe-directory/
ansible-multiregion/ansible-venv/
ansible-multiregion/cockroach/files/*.yaml
ansible-multiregion/cockroach/files/certs
ansible-multiregion/cockroach/files/my-safe-directory
ansible-multiregion/cockroach/files/teardown.py
ansible-multiregion/cockroach/files/setup.py
ansible-multiregion/cockroach/files/setup.py.clean
ansible-multiregion/cockroach/files/generated
terraform/test/.terraform.lock.hcl
terraform-azure/test/.terraform.lock.hcl
terraform/test/0

# remove .DS_STORE
.DS_Store
